<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
 
    <!-- ============================================================================================ -->
    <!-- default (디폴트 서블릿 한테 요청을 위임)-->
    <!-- ============================================================================================ -->
    <mvc:default-servlet-handler />
 
    <!-- ============================================================================================ -->
    <!-- annotation config -->
    <!-- ============================================================================================ -->
    <context:annotation-config />
 
    <!-- ============================================================================================ -->
    <!-- annotation scan : 컨트롤러를 자동으로 스캔 -->
    <!-- ============================================================================================ -->
    <context:component-scan base-package="kr.co.blog">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>
 
    <!-- ============================================================================================ -->
    <!-- JSR-303 support will be detected on classpath and enabled automatically -->
    <!-- ============================================================================================ -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.FormHttpMessageConverter">
                <property name="charset">
                    <bean class="java.nio.charset.Charset" factory-method="forName">
                        <constructor-arg value="UTF-8"/>
                    </bean>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.feed.AtomFeedHttpMessageConverter">
                <property name="supportedMediaTypes" value="application/atom+xml" />
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                <property name="supportedMediaTypes" value="application/json" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <!-- ============================================================================================ -->
    <!-- localeResolver 쿠키를 이용 -->
    <!-- ============================================================================================ -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>
 
    <!-- ============================================================================================ -->
    <!-- classpath 로딩시 locale parameter 가 정상적으로 동작하지 않음. <mvc:annotation-driven> 과 같은 파일내에서 사용-->
    <!-- ============================================================================================ -->
    <mvc:interceptors>
	    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
	       <property name="paramName" value="locale" />
	    </bean>
        <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
            <property name="cacheSeconds" value="0"/>
            <property name="useExpiresHeader" value="true"/>
            <property name="useCacheControlHeader" value="true"/>
            <property name="useCacheControlNoStore" value="true"/>
        </bean>
        <mvc:interceptor>
            <mvc:mapping path="/user/home.do" />
            <mvc:mapping path="/user/userInfo.do" />
            <mvc:mapping path="/user/userEdit.do" />
            <!-- <mvc:mapping path="/user/**" /> -->
            <bean class="kr.co.blog.web.security.SecurityInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
    
    <!-- ============================================================================================ -->
    <!-- Exception Resolver-->
    <!-- ============================================================================================ -->
    <bean id="exceptionResolver"  class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="/error/defaultErrorView"/> 
        <property name="exceptionMappings">
            <props>
                <prop key="SecurityException">login</prop>
            </props>
        </property>
    </bean>
 
    <!-- ============================================================================================ -->
    <!--view name tanslator : 논리적인 View 이름을 생성하여 ViewResolver 에서 넘겨준다.   -->
    <!-- ============================================================================================ -->
    <bean id="viewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator" />
 
    <!-- ============================================================================================ -->
    <!-- view resolver : 상황에 맞는 view search-->
    <!-- ============================================================================================ -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json" />
                <entry key="xml"  value="application/xml" />
                <entry key="do"   value="text/html" />
            </map>
        </property>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/WEB-INF/views/jsp/" />
                    <property name="suffix" value=".jsp" />
                    <property name="order"  value="2"/>
                </bean>
            </list>
        </property>
    </bean>
</beans>